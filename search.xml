<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Add Two Numbers</title>
    <url>/2023/06/10/Add-Two-Numbers/</url>
    <content><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote>
<p><a href="https://leetcode.cn/problems/add-two-numbers/description/">https://leetcode.cn/problems/add-two-numbers/description/</a></p>
<p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.<br>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>
</blockquote>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102009991.jpg" alt="img"></p>
<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p>2 个逆序的链表，要求从低位开始相加，得出结果也逆序输出，返回值是逆序结果链表的头结点。</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>需要注意各种进位问题。极端情况如下：</p>
<p>Input: (9 -&gt; 9 -&gt; 9 -&gt; 9 -&gt; 9) + (1 -&gt; ) </p>
<p>Output: 0 -&gt; 0 -&gt; 0 -&gt; 0 -&gt; 0 -&gt; 1</p>
<p>为了处理⽅法统⼀，可以先建⽴⼀个虚拟头结点，这个虚拟头结点的 Next 指向真正的 head，这样 head 不需要单独处理，直接 while 循环即可。另外判断循环终⽌的条件不⽤是 p.Next ！&#x3D; nil，这样最后⼀位还需要额外计算，循环终⽌条件应该是 p !&#x3D; nil。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addTwoNumbers</span><span class="params">(l1 *ListNode, l2 *ListNode)</span></span> *ListNode &#123;</span><br><span class="line">    head := &amp;ListNode&#123;<span class="number">0</span>, <span class="literal">nil</span>&#125;</span><br><span class="line">    n1, n2, carry, current := <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, head</span><br><span class="line">    <span class="keyword">for</span> l1 != <span class="literal">nil</span> || l2 != <span class="literal">nil</span> || carry != <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> l1 == <span class="literal">nil</span> &#123;</span><br><span class="line">            n1 = <span class="number">0</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            n1 = l1.Val</span><br><span class="line">            l1 = l1.Next</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> l2 == <span class="literal">nil</span> &#123;</span><br><span class="line">            n2 = <span class="number">0</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            n2 = l2.Val</span><br><span class="line">            l2 = l2.Next</span><br><span class="line">        &#125;</span><br><span class="line">        current.Next = &amp;ListNode&#123;(n1 + n2 + carry) % <span class="number">10</span>, <span class="literal">nil</span>&#125;</span><br><span class="line">        current = current.Next</span><br><span class="line">        carry = (n1 + n2 + carry) / <span class="number">10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> head.Next</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>力扣</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora+PicGo+Hexo+Github搭建个人博客流水线</title>
    <url>/2023/06/09/Typora-PicGo-Hexo-Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%B5%81%E6%B0%B4%E7%BA%BF/</url>
    <content><![CDATA[<h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><ul>
<li><p><a href="https://nodejs.cn/">Node安装及配置</a></p>
</li>
<li><p><a href="https://git-scm.com/">Git安装及配置</a></p>
</li>
<li><p><a href="https://github.com/">Github注册</a></p>
</li>
<li><p><a href="https://typoraio.cn/">Typora安装</a></p>
</li>
<li><p><a href="https://picgo.github.io/PicGo-Doc/zh/">PicGo安装</a></p>
</li>
<li><p>科学上网(众所周知的原因，github访问不太通畅)</p>
</li>
</ul>
<h3 id="安装Hexo并创建博客项目"><a href="#安装Hexo并创建博客项目" class="headerlink" title="安装Hexo并创建博客项目"></a>安装Hexo并创建博客项目</h3><p>详细教程请参考<a href="https://hexo.io/zh-cn/index.html">官方文档</a>，以下为基本步骤：</p>
<h4 id="hexo-cli安装"><a href="#hexo-cli安装" class="headerlink" title="hexo-cli安装"></a>hexo-cli安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g </span><br></pre></td></tr></table></figure>
<h4 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> blogs &amp;&amp; <span class="built_in">cd</span> blogs</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<h4 id="编译运行"><a href="#编译运行" class="headerlink" title="编译运行"></a>编译运行</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment">#非必要，但是如果效果和预期不一样可以尝试</span></span><br><span class="line">hexo g <span class="comment">#生成静态文件</span></span><br><span class="line">hexo s <span class="comment">#启动本地服务，点击url查看效果</span></span><br></pre></td></tr></table></figure>

<h4 id="hexo配置优化"><a href="#hexo配置优化" class="headerlink" title="hexo配置优化"></a>hexo配置优化</h4><h5 id="安装主题，推荐next"><a href="#安装主题，推荐next" class="headerlink" title="安装主题，推荐next"></a>安装主题，推荐<a href="https://github.com/theme-next/hexo-theme-next">next</a></h5>  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blogs</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h5 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h5><p>参考这篇博文：</p>
<blockquote>
<p><a href="https://blog.csdn.net/as480133937/article/details/100138838">https://blog.csdn.net/as480133937/article/details/100138838</a></p>
</blockquote>
<h3 id="善用Github"><a href="#善用Github" class="headerlink" title="善用Github"></a>善用Github</h3><h4 id="Github-Pages"><a href="#Github-Pages" class="headerlink" title="Github Pages"></a>Github Pages</h4><h5 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h5><p>repo的命名规则为：username.github.io</p>
<p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102011272.png" alt="image-20230610201117171"></p>
<h5 id="修改博客根目录-config-yml"><a href="#修改博客根目录-config-yml" class="headerlink" title="修改博客根目录_config.yml"></a>修改博客根目录_config.yml</h5><p>设置博客访问地址</p>
<p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102011946.png" alt="image-20230610201131922"></p>
<p>设置博客部署地址</p>
<p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102011336.png" alt="image-20230610201146311"></p>
<h4 id="Gitalk"><a href="#Gitalk" class="headerlink" title="Gitalk"></a>Gitalk</h4><p>hexo原生支持Gitalk插件，可以轻松配置留言板</p>
<h5 id="创建OAuth-App"><a href="#创建OAuth-App" class="headerlink" title="创建OAuth App"></a>创建OAuth App</h5><p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102012494.png" alt="image-20230610201210461"></p>
<p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102012728.png" alt="image-20230610201218707"></p>
<p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102014507.png" alt="image-20230610201439470"></p>
<p>记住生成的Client secrets(只会显示一次)，然后在博客项目next主题的_config.yal文件中配置，具体步骤自行上网搜索</p>
<h4 id="Picture-Bed"><a href="#Picture-Bed" class="headerlink" title="Picture Bed"></a>Picture Bed</h4><p>此功能搭配PicGo使用</p>
<h5 id="创建仓库-1"><a href="#创建仓库-1" class="headerlink" title="创建仓库"></a>创建仓库</h5><p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102012984.png" alt="image-20230610201227964"></p>
<h5 id="获取access-token"><a href="#获取access-token" class="headerlink" title="获取access token"></a>获取access token</h5><p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102014636.png" alt="image-20230610201452607"></p>
<p>记住，只会显示一次</p>
<h3 id="Typora-amp-PicGo配合使用"><a href="#Typora-amp-PicGo配合使用" class="headerlink" title="Typora&amp;PicGo配合使用"></a>Typora&amp;PicGo配合使用</h3><h4 id="typora配置图片自动上传图床"><a href="#typora配置图片自动上传图床" class="headerlink" title="typora配置图片自动上传图床"></a>typora配置图片自动上传图床</h4><p><img src="https://cdn.jsdelivr.net/gh/flowsyu/ImgGallery/202306102012639.png" alt="image-20230610201235618"></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>至此，个人博客流水线搭建完成，可以愉快的写blog了~</p>
]]></content>
      <categories>
        <category>搭建个人博客</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>android源码下载和编译</title>
    <url>/2023/08/12/android%E6%BA%90%E7%A0%81%E4%B8%8B%E8%BD%BD%E5%92%8C%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h2 id="Ubuntu编译Android"><a href="#Ubuntu编译Android" class="headerlink" title="Ubuntu编译Android"></a>Ubuntu编译Android</h2><h4 id="Ubuntu版本：22-04"><a href="#Ubuntu版本：22-04" class="headerlink" title="Ubuntu版本：22.04"></a>Ubuntu版本：22.04</h4><h4 id="Android版本：11"><a href="#Android版本：11" class="headerlink" title="Android版本：11"></a>Android版本：11</h4><h5 id="安装repo"><a href="#安装repo" class="headerlink" title="安装repo"></a>安装repo</h5><ol>
<li><p>确保主目录下有一个 bin&#x2F; 目录，并且该目录包含在路径中：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> ~/bin</span><br><span class="line">PATH=~/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>下载 Repo 工具，并确保它可执行：</p>
<p>官方源：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://storage.googleapis.com/git-repo-downloads/repo &gt; ~/bin/repo</span><br><span class="line"><span class="built_in">chmod</span> a+x ~/bin/repo</span><br></pre></td></tr></table></figure>

<p>清华源：</p>
<p>下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o ~/bin/repo</span><br><span class="line"><span class="built_in">chmod</span> +x repo</span><br></pre></td></tr></table></figure>

<p>更新</p>
<p>repo运行过程中会尝试访问官方源更新自己，如果要使用清华的镜像源更新，复制以下内容到~&#x2F;.bashrc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> REPO_URL=<span class="string">&#x27;https://mirrors.tuna.tsinghua.edu.cn/git/git-repo&#x27;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h5><ol>
<li><p>配置git</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;Your Email&quot;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用清华源初始化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">repo init -u https://aosp.tuna.tsinghua.edu.cn/platform/manifest -b android-11.0.0_r48</span><br></pre></td></tr></table></figure>
</li>
<li><p>同步代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">repo <span class="built_in">sync</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h5 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h5><ol>
<li><p>依赖安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install libssl-dev libffi-dev gnupg flex bison gperf zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses-dev x11proto-core-dev libx11-dev zlib1g-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip</span><br></pre></td></tr></table></figure>
</li>
<li><p>编译</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> build/envsetup.sh</span><br><span class="line">lunch &#123;指定target&#125;</span><br><span class="line">mm</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>repo</tag>
        <tag>aosp</tag>
      </tags>
  </entry>
  <entry>
    <title>Two Sum</title>
    <url>/2023/06/10/Two-Sum/</url>
    <content><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><blockquote>
<p><a href="https://leetcode.cn/problems/two-sum/description/">https://leetcode.cn/problems/two-sum/description/</a></p>
<p>Given an array of integers, return indices of the two numbers such that they add up to a specific target.<br>You may assume that each input would have exactly one solution, and you may not use the same element twice.</p>
</blockquote>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><blockquote>
<p>Given nums &#x3D; [2, 7, 11, 15], target &#x3D; 9,<br>Because nums[0] + nums[1] &#x3D; 2 + 7 &#x3D; 9,<br>return [0, 1]</p>
</blockquote>
<h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><p>在数组中找到 2 个数之和等于给定值的数字，结果返回 2 个数字在数组中的下标。</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>这道题最优的做法时间复杂度是 O(n)。<br>顺序扫描数组，对每一个元素，在 map 中找能组合给定值的另一半数字，如果找到了，直接返回 2 个数字的下标即可。如果找不到，就把这个数字存入 map 中，等待扫到“另一半”数字的时候，再取出来返回结果。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(nums []<span class="type">int</span>, target <span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); i++ &#123;</span><br><span class="line">        another := target - nums[i]</span><br><span class="line">        <span class="keyword">if</span> _, ok := m[another]; ok &#123;</span><br><span class="line">            <span class="keyword">return</span> []<span class="type">int</span>&#123;m[another], i&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        m[nums[i]] = i</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>力扣</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
